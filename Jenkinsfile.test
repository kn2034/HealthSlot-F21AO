#!/usr/bin/env groovy

// Test pipeline for HealthSlot project
pipeline {
    agent {
        label 'built-in'
    }
    
    options {
        skipDefaultCheckout(false)
        disableConcurrentBuilds()
    }
    
    environment {
        NODE_VERSION = 'v16'
    }
    
    stages {
        stage('Verify Pipeline') {
            steps {
                script {
                    echo 'Verifying pipeline configuration...'
                    echo "Running from file: Jenkinsfile.test"
                    echo "Current workspace: ${WORKSPACE}"
                }
            }
        }
        
        stage('Verify Environment') {
            steps {
                script {
                    echo 'Checking build environment...'
                    sh '''
                        echo "Workspace directory:"
                        pwd
                        echo "System information:"
                        uname -a
                        echo "Current user:"
                        whoami
                    '''
                }
            }
        }
        
        stage('Setup Node.js') {
            steps {
                script {
                    try {
                        sh 'node --version'
                    } catch (err) {
                        echo 'Node.js not found, installing...'
                        sh '''
                            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
                            export NVM_DIR="$HOME/.nvm"
                            if [ -f "$NVM_DIR/nvm.sh" ]; then
                                . "$NVM_DIR/nvm.sh"
                                nvm install ${NODE_VERSION}
                                nvm use ${NODE_VERSION}
                            else
                                echo "NVM installation failed"
                                exit 1
                            fi
                        '''
                    }
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                script {
                    try {
                        sh 'npm install'
                    } catch (err) {
                        echo "Error installing dependencies: ${err}"
                        unstable('Failed to install dependencies')
                        error 'Failed to install dependencies'
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    try {
                        sh 'npm test'
                    } catch (err) {
                        echo "Error running tests: ${err}"
                        unstable('Tests failed')
                        error 'Tests failed'
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo 'Cleaning workspace...'
                cleanWs(
                    cleanWhenSuccess: true,
                    cleanWhenFailure: true,
                    cleanWhenUnstable: true,
                    deleteDirs: true
                )
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
        }
    }
} 